---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="dark:bg-slate-800 transition dark:text-white">
    <slot />
  </body>
</html>
<style is:global>
  html {
    /* margin: 0 auto;
    max-width: 780px;
    padding: 0 10px; */
    /* background-color: rgb(47, 47, 47);
    color: white; */
  }
</style>

<script is:inline>
const theme = (() => {
  if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
    return localStorage.getItem("theme");
  }
  if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
    return "dark";
  }
  return "light";
})();

if (theme === "light") {
  document.documentElement.classList.remove("dark");
} else {
  document.documentElement.classList.add("dark");
}
window.localStorage.setItem("theme", theme);

// const themeToggler = document.querySelector("#themeToggler");

// themeToggler.addEventListener("click", function () {
//   const currentTheme = window.localStorage.getItem("theme");
//   if (currentTheme === "dark") {
//     document.documentElement.classList.remove("dark");
//     return window.localStorage.setItem("theme", "light");
//   }

//   document.documentElement.classList.add("dark");
//   window.localStorage.setItem("theme", "dark");
// });

const menuToggler = document.querySelector("#btn-openmodal");
const modal = document.querySelector("#right-modal");

menuToggler.addEventListener("click", function () {
  if (modal.classList.contains("hidden")) modal.classList.remove("hidden");
  return;
});

window.onclick = function (e) {
  console.log(e.target);
  console.log(modal);
  if (e.target === modal) {
    modal.classList.add("hidden");
  }
};
</script>
